version: '3.9'

services:
  frontend:
    container_name: frontend
    build:
      context: ./wr-frontend/
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - ./wr-frontend:/app
    networks:
      - react-express
    depends_on:
      backend:
        condition: service_healthy
    environment:
      DB_API_HOST: backend
    healthcheck:
      test: ['CMD', 'lsof', '-t', '-i:3000']
      timeout: 3s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./wr-backend/
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - ./wr-backend:/app
    networks:
      - express-mongo
      - react-express
    environment:
      PORT: 3001
      MONGO_CONN_STRING: mongodb://root:root@mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'lsof', '-t', '-i:3001']
      timeout: 3s
      retries: 5

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    restart: always
    volumes:
      - ./data:/data/db
    networks:
      - express-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 3s
      timeout: 3s
      retries: 5

networks:
  react-express:
  express-mongo:
